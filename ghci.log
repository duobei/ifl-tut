Build profile: -w ghc-9.2.1 -O1
In order, the following will be built (use -v for more details):
 - ifl-tut-0.2.8.1 (lib) (file src/Template/Mark5/Machine.hs changed)
Preprocessing library for ifl-tut-0.2.8.1..
GHCi, version 9.2.1: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/nobsun/develop/ifl-tut/.ghci
[ 1 of 23] Compiling MyLib            ( src/MyLib.hs, interpreted )
[ 2 of 23] Compiling Parser           ( src/Parser.hs, interpreted )
[ 3 of 23] Compiling Stack            ( src/Stack.hs, interpreted )
[ 4 of 23] Compiling Utils            ( src/Utils.hs, interpreted )
[ 5 of 23] Compiling Iseq             ( src/Iseq.hs, interpreted )
[ 6 of 23] Compiling Language         ( src/Language.hs, interpreted )
[ 7 of 23] Compiling Template.Mark5.Primitive ( src/Template/Mark5/Primitive.hs, interpreted )
[ 8 of 23] Compiling Heap             ( src/Heap.hs, interpreted )
[ 9 of 23] Compiling Template.Mark5b.State ( src/Template/Mark5b/State.hs, interpreted )
[10 of 23] Compiling Template.Mark5b.PPrint ( src/Template/Mark5b/PPrint.hs, interpreted )
[11 of 23] Compiling Template.Mark5b.Machine ( src/Template/Mark5b/Machine.hs, interpreted )
[12 of 23] Compiling Template.Mark5a.State ( src/Template/Mark5a/State.hs, interpreted )
[13 of 23] Compiling Template.Mark5a.PPrint ( src/Template/Mark5a/PPrint.hs, interpreted )
[14 of 23] Compiling Template.Mark5a.Machine ( src/Template/Mark5a/Machine.hs, interpreted )
[15 of 23] Compiling Template.Mark5.Node ( src/Template/Mark5/Node.hs, interpreted )
[16 of 23] Compiling Template.Mark5.State ( src/Template/Mark5/State.hs, interpreted )
[17 of 23] Compiling Template.Mark5   ( src/Template/Mark5.hs, interpreted )
[18 of 23] Compiling Template.Mark4   ( src/Template/Mark4.hs, interpreted )
[19 of 23] Compiling Template.Mark3   ( src/Template/Mark3.hs, interpreted )
[20 of 23] Compiling Template.Mark2   ( src/Template/Mark2.hs, interpreted )
[21 of 23] Compiling Template.Mark1   ( src/Template/Mark1.hs, interpreted )
[22 of 23] Compiling Template.Mark5.PPrint ( src/Template/Mark5/PPrint.hs, interpreted )
[23 of 23] Compiling Template.Mark5.Machine ( src/Template/Mark5/Machine.hs, interpreted )
Ok, 23 modules loaded.
>>> import Template.Mark5.Machine
>>> test "main = Cons (negate (2 + 3)) Nil"
   0) Heap [  40: NAp #21 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  40: NAp   21    1 (NSupercomb main) ]
      Depth 1
      Output []
      Rule (2,0)
      
   1) Heap [  40: NAp #21 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  21: NSupercomb printList
               40: NAp   21    1 (NSupercomb main) ]
      Depth 2
      Output []
      Rule (2,1)
      
   2) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  40: NAp   42   22 (NSupercomb printCons) ]
      Depth 1
      Output []
      Rule (2,3)
      
   3) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 2
      Output []
      Rule (2,1)
      
   4) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  41: NAp   36    1 (NSupercomb main)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 3
      Output []
      Rule (2,1)
      
   5) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  36: NPrim caseList
               41: NAp   36    1 (NSupercomb main)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 4
      Output []
      Rule (2,1)
      
   6) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [   1: NSupercomb main ]
      Depth 1
      Output []
      Rule (2,1)
      
   7) Heap [   1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [   1: NAp   48   17 (NSupercomb Nil) ]
      Depth 1
      Output []
      Rule (2,3)
      
   8) Heap [   1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  48: NAp   18   47 (NAp #23 #46)
                1: NAp   48   17 (NSupercomb Nil) ]
      Depth 2
      Output []
      Rule (2,1)
      
   9) Heap [   1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  18: NSupercomb Cons
               48: NAp   18   47 (NAp #23 #46)
                1: NAp   48   17 (NSupercomb Nil) ]
      Depth 3
      Output []
      Rule (2,1)
      
  10) Heap [  18: NPrim Constr
               1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  18: NPrim Constr
               48: NAp   18   47 (NAp #23 #46)
                1: NAp   48   17 (NSupercomb Nil) ]
      Depth 3
      Output []
      Rule (2,3)
      
  11) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [   1: NData 1 #47 #17 ]
      Depth 1
      Output []
      Rule (2,10)
      
  12) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   42   22 (NSupercomb printCons) ]
      Depth 1
      Output []
      Rule (2,10)
      
  13) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 2
      Output []
      Rule (2,1)
      
  14) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  41: NAp   36    1 (NData 1 #47 #17)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 3
      Output []
      Rule (2,1)
      
  15) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  36: NPrim caseList
               41: NAp   36    1 (NData 1 #47 #17)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 4
      Output []
      Rule (2,1)
      
  16) Heap [  40: NAp #49 #17
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   49   17 (NSupercomb Nil) ]
      Depth 1
      Output []
      Rule (2,1)
      
  17) Heap [  40: NAp #49 #17
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  49: NAp   22   47 (NAp #23 #46)
               40: NAp   49   17 (NSupercomb Nil) ]
      Depth 2
      Output []
      Rule (2,1)
      
  18) Heap [  40: NAp #49 #17
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  22: NSupercomb printCons
               49: NAp   22   47 (NAp #23 #46)
               40: NAp   49   17 (NSupercomb Nil) ]
      Depth 3
      Output []
      Rule (2,1)
      
  19) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   50   51 (NAp #21 #17) ]
      Depth 1
      Output []
      Rule (2,3)
      
  20) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  50: NAp   39   47 (NAp #23 #46)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 2
      Output []
      Rule (2,1)
      
  21) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  39: NPrim print
               50: NAp   39   47 (NAp #23 #46)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 3
      Output []
      Rule (2,1)
      
  22) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  47: NAp   23   46 (NAp #44 #45) ]
      Depth 1
      Output []
      Rule (2,13)
      
  23) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  23: NPrim negate
               47: NAp   23   46 (NAp #44 #45) ]
      Depth 2
      Output []
      Rule (2,1)
      
  24) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  46: NAp   44   45 (NNum 3) ]
      Depth 1
      Output []
      Rule (2,9)
      
  25) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  44: NAp   24   43 (NNum 2)
               46: NAp   44   45 (NNum 3) ]
      Depth 2
      Output []
      Rule (2,1)
      
  26) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  24: NPrim +
               44: NAp   24   43 (NNum 2)
               46: NAp   44   45 (NNum 3) ]
      Depth 3
      Output []
      Rule (2,1)
      
  27) Heap [  46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  46: NNum 5 ]
      Depth 1
      Output []
      Rule (2,17)
      
  28) Heap [  46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  47: NAp   23   46 (NNum 5) ]
      Depth 1
      Output []
      Rule (2,7)
      
  29) Heap [  46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  23: NPrim negate
               47: NAp   23   46 (NNum 5) ]
      Depth 2
      Output []
      Rule (2,1)
      
  30) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  47: NNum -5 ]
      Depth 1
      Output []
      Rule (2,5)
      
  31) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   50   51 (NAp #21 #17) ]
      Depth 1
      Output []
      Rule (2,7)
      
  32) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  50: NAp   39   47 (NNum -5)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 2
      Output []
      Rule (2,1)
      
  33) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  39: NPrim print
               50: NAp   39   47 (NNum -5)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 3
      Output []
      Rule (2,1)
      
  34) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NAp   21   17 (NSupercomb Nil) ]
      Depth 1
      Output [-5]
      Rule (2,12)
      
  35) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  21: NSupercomb printList
               51: NAp   21   17 (NSupercomb Nil) ]
      Depth 2
      Output [-5]
      Rule (2,1)
      
  36) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NAp   53   22 (NSupercomb printCons) ]
      Depth 1
      Output [-5]
      Rule (2,3)
      
  37) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 2
      Output [-5]
      Rule (2,1)
      
  38) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  52: NAp   36   17 (NSupercomb Nil)
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 3
      Output [-5]
      Rule (2,1)
      
  39) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  36: NPrim caseList
               52: NAp   36   17 (NSupercomb Nil)
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 4
      Output [-5]
      Rule (2,1)
      
  40) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  17: NSupercomb Nil ]
      Depth 1
      Output [-5]
      Rule (2,1)
      
  41) Heap [  17: NPrim Constr
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  17: NPrim Constr ]
      Depth 1
      Output [-5]
      Rule (2,3)
      
  42) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  17: NData 0  ]
      Depth 1
      Output [-5]
      Rule (2,10)
      
  43) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NAp   53   22 (NSupercomb printCons) ]
      Depth 1
      Output [-5]
      Rule (2,10)
      
  44) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 2
      Output [-5]
      Rule (2,1)
      
  45) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  52: NAp   36   17 (NData 0 )
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 3
      Output [-5]
      Rule (2,1)
      
  46) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  36: NPrim caseList
               52: NAp   36   17 (NData 0 )
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 4
      Output [-5]
      Rule (2,1)
      
  47) Heap [  51: NInd #38
              17: NData 0 
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NInd #38 ]
      Depth 1
      Output [-5]
      Rule (2,1)
      
  48) Heap [  51: NInd #38
              17: NData 0 
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  38: NPrim stop ]
      Depth 1
      Output [-5]
      Rule (2,4)
      
  49) Heap [  51: NInd #38
              17: NData 0 
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [ ]
      Depth 0
      Output [-5]
      Rule (2,11)
      

Total number of steps = 49
             Sc steps = 6
           Prim steps = 4
     Allocation count = 53
   Max depth of stack = 4>>> 
>>> test "main = Cons (negate (2 + 3)) Nil"
   0) Heap [  40: NAp #21 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  40: NAp   21    1 (NSupercomb main) ]
      Depth 1
      Output []
      Rule (2,0)
      
   1) Heap [  40: NAp #21 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  21: NSupercomb printList
               40: NAp   21    1 (NSupercomb main) ]
      Depth 2
      Output []
      Rule (2,1)
      
   2) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  40: NAp   42   22 (NSupercomb printCons) ]
      Depth 1
      Output []
      Rule (2,3)
      
   3) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 2
      Output []
      Rule (2,1)
      
   4) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  41: NAp   36    1 (NSupercomb main)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 3
      Output []
      Rule (2,1)
      
   5) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  36: NPrim caseList
               41: NAp   36    1 (NSupercomb main)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 4
      Output []
      Rule (2,1)
      
   6) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [   1: NSupercomb main ]
      Depth 1
      Output []
      Rule (2,1)
      
   7) Heap [   1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [   1: NAp   48   17 (NSupercomb Nil) ]
      Depth 1
      Output []
      Rule (2,3)
      
   8) Heap [   1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  48: NAp   18   47 (NAp #23 #46)
                1: NAp   48   17 (NSupercomb Nil) ]
      Depth 2
      Output []
      Rule (2,1)
      
   9) Heap [   1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  18: NSupercomb Cons
               48: NAp   18   47 (NAp #23 #46)
                1: NAp   48   17 (NSupercomb Nil) ]
      Depth 3
      Output []
      Rule (2,1)
      
  10) Heap [  18: NPrim Constr
               1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  18: NPrim Constr
               48: NAp   18   47 (NAp #23 #46)
                1: NAp   48   17 (NSupercomb Nil) ]
      Depth 3
      Output []
      Rule (2,3)
      
  11) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [   1: NData 1 #47 #17 ]
      Depth 1
      Output []
      Rule (2,10)
      
  12) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   42   22 (NSupercomb printCons) ]
      Depth 1
      Output []
      Rule (2,10)
      
  13) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 2
      Output []
      Rule (2,1)
      
  14) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  41: NAp   36    1 (NData 1 #47 #17)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 3
      Output []
      Rule (2,1)
      
  15) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  36: NPrim caseList
               41: NAp   36    1 (NData 1 #47 #17)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 4
      Output []
      Rule (2,1)
      
  16) Heap [  40: NAp #49 #17
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   49   17 (NSupercomb Nil) ]
      Depth 1
      Output []
      Rule (2,1)
      
  17) Heap [  40: NAp #49 #17
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  49: NAp   22   47 (NAp #23 #46)
               40: NAp   49   17 (NSupercomb Nil) ]
      Depth 2
      Output []
      Rule (2,1)
      
  18) Heap [  40: NAp #49 #17
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  22: NSupercomb printCons
               49: NAp   22   47 (NAp #23 #46)
               40: NAp   49   17 (NSupercomb Nil) ]
      Depth 3
      Output []
      Rule (2,1)
      
  19) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   50   51 (NAp #21 #17) ]
      Depth 1
      Output []
      Rule (2,3)
      
  20) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  50: NAp   39   47 (NAp #23 #46)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 2
      Output []
      Rule (2,1)
      
  21) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  39: NPrim print
               50: NAp   39   47 (NAp #23 #46)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 3
      Output []
      Rule (2,1)
      
  22) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  47: NAp   23   46 (NAp #44 #45) ]
      Depth 1
      Output []
      Rule (2,13)
      
  23) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  23: NPrim negate
               47: NAp   23   46 (NAp #44 #45) ]
      Depth 2
      Output []
      Rule (2,1)
      
  24) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  46: NAp   44   45 (NNum 3) ]
      Depth 1
      Output []
      Rule (2,9)
      
  25) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  44: NAp   24   43 (NNum 2)
               46: NAp   44   45 (NNum 3) ]
      Depth 2
      Output []
      Rule (2,1)
      
  26) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  24: NPrim +
               44: NAp   24   43 (NNum 2)
               46: NAp   44   45 (NNum 3) ]
      Depth 3
      Output []
      Rule (2,1)
      
  27) Heap [  46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  46: NNum 5 ]
      Depth 1
      Output []
      Rule (2,17)
      
  28) Heap [  46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  47: NAp   23   46 (NNum 5) ]
      Depth 1
      Output []
      Rule (2,7)
      
  29) Heap [  46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  23: NPrim negate
               47: NAp   23   46 (NNum 5) ]
      Depth 2
      Output []
      Rule (2,1)
      
  30) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  47: NNum -5 ]
      Depth 1
      Output []
      Rule (2,5)
      
  31) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   50   51 (NAp #21 #17) ]
      Depth 1
      Output []
      Rule (2,7)
      
  32) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  50: NAp   39   47 (NNum -5)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 2
      Output []
      Rule (2,1)
      
  33) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  39: NPrim print
               50: NAp   39   47 (NNum -5)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 3
      Output []
      Rule (2,1)
      
  34) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NAp   21   17 (NSupercomb Nil) ]
      Depth 1
      Output [-5]
      Rule (2,12)
      
  35) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  21: NSupercomb printList
               51: NAp   21   17 (NSupercomb Nil) ]
      Depth 2
      Output [-5]
      Rule (2,1)
      
  36) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NAp   53   22 (NSupercomb printCons) ]
      Depth 1
      Output [-5]
      Rule (2,3)
      
  37) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 2
      Output [-5]
      Rule (2,1)
      
  38) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  52: NAp   36   17 (NSupercomb Nil)
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 3
      Output [-5]
      Rule (2,1)
      
  39) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  36: NPrim caseList
               52: NAp   36   17 (NSupercomb Nil)
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 4
      Output [-5]
      Rule (2,1)
      
  40) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  17: NSupercomb Nil ]
      Depth 1
      Output [-5]
      Rule (2,1)
      
  41) Heap [  17: NPrim Constr
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  17: NPrim Constr ]
      Depth 1
      Output [-5]
      Rule (2,3)
      
  42) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  17: NData 0  ]
      Depth 1
      Output [-5]
      Rule (2,10)
      
  43) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NAp   53   22 (NSupercomb printCons) ]
      Depth 1
      Output [-5]
      Rule (2,10)
      
  44) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 2
      Output [-5]
      Rule (2,1)
      
  45) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  52: NAp   36   17 (NData 0 )
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 3
      Output [-5]
      Rule (2,1)
      
  46) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  36: NPrim caseList
               52: NAp   36   17 (NData 0 )
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 4
      Output [-5]
      Rule (2,1)
      
  47) Heap [  51: NInd #38
              17: NData 0 
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NInd #38 ]
      Depth 1
      Output [-5]
      Rule (2,1)
      
  48) Heap [  51: NInd #38
              17: NData 0 
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  38: NPrim stop ]
      Depth 1
      Output [-5]
      Rule (2,4)
      
  49) Heap [  51: NInd #38
              17: NData 0 
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [ ]
      Depth 0
      Output [-5]
      Rule (2,11)
      

Total number of steps = 49
             Sc steps = 6
           Prim steps = 4
     Allocation count = 53
   Max depth of stack = 4>>> 
>>> :e Template.Mark5.Machine
:l Template.Mark5.Machine
catn: Template.Mark5.Machine: openFile: does not exist (No such file or directory)
>>> 
<no location info>: warning: [-Wmissing-home-modules]
    These modules are needed for compilation but not listed in your .cabal file's other-modules: 
        Heap
        Iseq
        Language
        Parser
        Stack
        Template.Mark5.Node
        Template.Mark5.PPrint
        Template.Mark5.Primitive
        Template.Mark5.State
        Utils
[ 1 of 11] Compiling Parser           ( src/Parser.hs, interpreted )
[ 2 of 11] Compiling Stack            ( src/Stack.hs, interpreted )
[ 3 of 11] Compiling Utils            ( src/Utils.hs, interpreted )
[ 4 of 11] Compiling Iseq             ( src/Iseq.hs, interpreted )
[ 5 of 11] Compiling Language         ( src/Language.hs, interpreted )
[ 6 of 11] Compiling Template.Mark5.Primitive ( src/Template/Mark5/Primitive.hs, interpreted )
[ 7 of 11] Compiling Heap             ( src/Heap.hs, interpreted )
[ 8 of 11] Compiling Template.Mark5.Node ( src/Template/Mark5/Node.hs, interpreted )
[ 9 of 11] Compiling Template.Mark5.State ( src/Template/Mark5/State.hs, interpreted )
[10 of 11] Compiling Template.Mark5.PPrint ( src/Template/Mark5/PPrint.hs, interpreted )
[11 of 11] Compiling Template.Mark5.Machine ( src/Template/Mark5/Machine.hs, interpreted )
Ok, 11 modules loaded.
>>> test "main = Cons (negate (2 + 3)) Nil"
   0) Heap [  40: NAp #21 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  40: NAp   21    1 (NSupercomb main) ]
      Depth 1
      Output []
      Rule (2,0)
      
   1) Heap [  40: NAp #21 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  21: NSupercomb printList
               40: NAp   21    1 (NSupercomb main) ]
      Depth 2
      Output []
      Rule (2,1)
      
   2) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  40: NAp   42   22 (NSupercomb printCons) ]
      Depth 1
      Output []
      Rule (2,3)
      
   3) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 2
      Output []
      Rule (2,1)
      
   4) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  41: NAp   36    1 (NSupercomb main)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 3
      Output []
      Rule (2,1)
      
   5) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [  36: NPrim caseList
               41: NAp   36    1 (NSupercomb main)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 4
      Output []
      Rule (2,1)
      
   6) Heap [  40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I
               1: NSupercomb main ]
      Stack [   1: NSupercomb main ]
      Depth 1
      Output []
      Rule (2,1)
      
   7) Heap [   1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [   1: NAp   48   17 (NSupercomb Nil) ]
      Depth 1
      Output []
      Rule (2,3)
      
   8) Heap [   1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  48: NAp   18   47 (NAp #23 #46)
                1: NAp   48   17 (NSupercomb Nil) ]
      Depth 2
      Output []
      Rule (2,1)
      
   9) Heap [   1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              18: NSupercomb Cons
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  18: NSupercomb Cons
               48: NAp   18   47 (NAp #23 #46)
                1: NAp   48   17 (NSupercomb Nil) ]
      Depth 3
      Output []
      Rule (2,1)
      
  10) Heap [  18: NPrim Constr
               1: NAp #48 #17
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  18: NPrim Constr
               48: NAp   18   47 (NAp #23 #46)
                1: NAp   48   17 (NSupercomb Nil) ]
      Depth 3
      Output []
      Rule (2,3)
      
  11) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [   1: NData 1 #47 #17 ]
      Depth 1
      Output []
      Rule (2,10)
      
  12) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   42   22 (NSupercomb printCons) ]
      Depth 1
      Output []
      Rule (2,10)
      
  13) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 2
      Output []
      Rule (2,1)
      
  14) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  41: NAp   36    1 (NData 1 #47 #17)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 3
      Output []
      Rule (2,1)
      
  15) Heap [   1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              40: NAp #42 #22
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  36: NPrim caseList
               41: NAp   36    1 (NData 1 #47 #17)
               42: NAp   41   38 (NPrim stop)
               40: NAp   42   22 (NSupercomb printCons) ]
      Depth 4
      Output []
      Rule (2,1)
      
  16) Heap [  40: NAp #49 #17
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   49   17 (NSupercomb Nil) ]
      Depth 1
      Output []
      Rule (2,1)
      
  17) Heap [  40: NAp #49 #17
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  49: NAp   22   47 (NAp #23 #46)
               40: NAp   49   17 (NSupercomb Nil) ]
      Depth 2
      Output []
      Rule (2,1)
      
  18) Heap [  40: NAp #49 #17
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  22: NSupercomb printCons
               49: NAp   22   47 (NAp #23 #46)
               40: NAp   49   17 (NSupercomb Nil) ]
      Depth 3
      Output []
      Rule (2,1)
      
  19) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   50   51 (NAp #21 #17) ]
      Depth 1
      Output []
      Rule (2,3)
      
  20) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  50: NAp   39   47 (NAp #23 #46)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 2
      Output []
      Rule (2,1)
      
  21) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  39: NPrim print
               50: NAp   39   47 (NAp #23 #46)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 3
      Output []
      Rule (2,1)
      
  22) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  47: NAp   23   46 (NAp #44 #45) ]
      Depth 1
      Output []
      Rule (2,13)
      
  23) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  23: NPrim negate
               47: NAp   23   46 (NAp #44 #45) ]
      Depth 2
      Output []
      Rule (2,1)
      
  24) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  46: NAp   44   45 (NNum 3) ]
      Depth 1
      Output []
      Rule (2,9)
      
  25) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  44: NAp   24   43 (NNum 2)
               46: NAp   44   45 (NNum 3) ]
      Depth 2
      Output []
      Rule (2,1)
      
  26) Heap [  40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              46: NAp #44 #45
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  24: NPrim +
               44: NAp   24   43 (NNum 2)
               46: NAp   44   45 (NNum 3) ]
      Depth 3
      Output []
      Rule (2,1)
      
  27) Heap [  46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  46: NNum 5 ]
      Depth 1
      Output []
      Rule (2,17)
      
  28) Heap [  46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  47: NAp   23   46 (NNum 5) ]
      Depth 1
      Output []
      Rule (2,7)
      
  29) Heap [  46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              47: NAp #23 #46
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  23: NPrim negate
               47: NAp   23   46 (NNum 5) ]
      Depth 2
      Output []
      Rule (2,1)
      
  30) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  47: NNum -5 ]
      Depth 1
      Output []
      Rule (2,5)
      
  31) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  40: NAp   50   51 (NAp #21 #17) ]
      Depth 1
      Output []
      Rule (2,7)
      
  32) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  50: NAp   39   47 (NNum -5)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 2
      Output []
      Rule (2,1)
      
  33) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  39: NPrim print
               50: NAp   39   47 (NNum -5)
               40: NAp   50   51 (NAp #21 #17) ]
      Depth 3
      Output []
      Rule (2,1)
      
  34) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NAp   21   17 (NSupercomb Nil) ]
      Depth 1
      Output [-5]
      Rule (2,12)
      
  35) Heap [  47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              51: NAp #21 #17
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  21: NSupercomb printList
               51: NAp   21   17 (NSupercomb Nil) ]
      Depth 2
      Output [-5]
      Rule (2,1)
      
  36) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NAp   53   22 (NSupercomb printCons) ]
      Depth 1
      Output [-5]
      Rule (2,3)
      
  37) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 2
      Output [-5]
      Rule (2,1)
      
  38) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  52: NAp   36   17 (NSupercomb Nil)
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 3
      Output [-5]
      Rule (2,1)
      
  39) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  36: NPrim caseList
               52: NAp   36   17 (NSupercomb Nil)
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 4
      Output [-5]
      Rule (2,1)
      
  40) Heap [  51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              17: NSupercomb Nil
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  17: NSupercomb Nil ]
      Depth 1
      Output [-5]
      Rule (2,1)
      
  41) Heap [  17: NPrim Constr
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  17: NPrim Constr ]
      Depth 1
      Output [-5]
      Rule (2,3)
      
  42) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  17: NData 0  ]
      Depth 1
      Output [-5]
      Rule (2,10)
      
  43) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NAp   53   22 (NSupercomb printCons) ]
      Depth 1
      Output [-5]
      Rule (2,10)
      
  44) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 2
      Output [-5]
      Rule (2,1)
      
  45) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  52: NAp   36   17 (NData 0 )
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 3
      Output [-5]
      Rule (2,1)
      
  46) Heap [  17: NData 0 
              51: NAp #53 #22
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  36: NPrim caseList
               52: NAp   36   17 (NData 0 )
               53: NAp   52   38 (NPrim stop)
               51: NAp   53   22 (NSupercomb printCons) ]
      Depth 4
      Output [-5]
      Rule (2,1)
      
  47) Heap [  51: NInd #38
              17: NData 0 
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  51: NInd #38 ]
      Depth 1
      Output [-5]
      Rule (2,1)
      
  48) Heap [  51: NInd #38
              17: NData 0 
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [  38: NPrim stop ]
      Depth 1
      Output [-5]
      Rule (2,4)
      
  49) Heap [  51: NInd #38
              17: NData 0 
              53: NAp #52 #38
              52: NAp #36 #17
              47: NNum -5
              46: NNum 5
              40: NAp #50 #51
              50: NAp #39 #47
              49: NAp #22 #47
               1: NData 1 #47 #17
              18: NPrim Constr
              48: NAp #18 #47
              45: NNum 3
              44: NAp #24 #43
              43: NNum 2
              42: NAp #41 #38
              41: NAp #36 #1
              39: NPrim print
              38: NPrim stop
              37: NPrim abort
              36: NPrim caseList
              35: NPrim casePair
              34: NPrim if
              33: NPrim /=
              32: NPrim ==
              31: NPrim >=
              30: NPrim >
              29: NPrim <=
              28: NPrim <
              27: NPrim /
              26: NPrim *
              25: NPrim -
              24: NPrim +
              23: NPrim negate
              22: NSupercomb printCons
              21: NSupercomb printList
              20: NSupercomb tail
              19: NSupercomb head
              16: NSupercomb snd
              15: NSupercomb fst
              14: NSupercomb MkPair
              13: NSupercomb xor
              12: NSupercomb or
              11: NSupercomb and
              10: NSupercomb not
               9: NSupercomb True
               8: NSupercomb False
               7: NSupercomb twice
               6: NSupercomb compose
               5: NSupercomb S
               4: NSupercomb K1
               3: NSupercomb K
               2: NSupercomb I ]
      Stack [ ]
      Depth 0
      Output [-5]
      Rule (2,11)
      

Total number of steps = 49
             Sc steps = 6
           Prim steps = 4
     Allocation count = 53
   Max depth of stack = 4
>>> :q
Leaving GHCi.
Build profile: -w ghc-9.2.1 -O1
In order, the following will be built (use -v for more details):
 - ifl-tut-0.2.8.1 (lib) (file src/Template/Mark5a/PPrint.hs changed)
Preprocessing library for ifl-tut-0.2.8.1..
GHCi, version 9.2.1: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/nobsun/develop/ifl-tut/.ghci
[ 1 of 23] Compiling MyLib            ( src/MyLib.hs, interpreted )
[ 2 of 23] Compiling Parser           ( src/Parser.hs, interpreted )
[ 3 of 23] Compiling Stack            ( src/Stack.hs, interpreted )
[ 4 of 23] Compiling Utils            ( src/Utils.hs, interpreted )
[ 5 of 23] Compiling Iseq             ( src/Iseq.hs, interpreted )
[ 6 of 23] Compiling Language         ( src/Language.hs, interpreted )
[ 7 of 23] Compiling Template.Mark5.Primitive ( src/Template/Mark5/Primitive.hs, interpreted )
[ 8 of 23] Compiling Heap             ( src/Heap.hs, interpreted )
[ 9 of 23] Compiling Template.Mark5b.State ( src/Template/Mark5b/State.hs, interpreted )
[10 of 23] Compiling Template.Mark5b.PPrint ( src/Template/Mark5b/PPrint.hs, interpreted )
[11 of 23] Compiling Template.Mark5b.Machine ( src/Template/Mark5b/Machine.hs, interpreted )
[12 of 23] Compiling Template.Mark5a.State ( src/Template/Mark5a/State.hs, interpreted )
[13 of 23] Compiling Template.Mark5.Node ( src/Template/Mark5/Node.hs, interpreted )
[14 of 23] Compiling Template.Mark5.State ( src/Template/Mark5/State.hs, interpreted )
[15 of 23] Compiling Template.Mark5   ( src/Template/Mark5.hs, interpreted )
[16 of 23] Compiling Template.Mark4   ( src/Template/Mark4.hs, interpreted )
[17 of 23] Compiling Template.Mark3   ( src/Template/Mark3.hs, interpreted )
[18 of 23] Compiling Template.Mark2   ( src/Template/Mark2.hs, interpreted )
[19 of 23] Compiling Template.Mark1   ( src/Template/Mark1.hs, interpreted )
[20 of 23] Compiling Template.Mark5a.PPrint ( src/Template/Mark5a/PPrint.hs, interpreted )
[21 of 23] Compiling Template.Mark5a.Machine ( src/Template/Mark5a/Machine.hs, interpreted )
[22 of 23] Compiling Template.Mark5.PPrint ( src/Template/Mark5/PPrint.hs, interpreted )
[23 of 23] Compiling Template.Mark5.Machine ( src/Template/Mark5/Machine.hs, interpreted )
Ok, 23 modules loaded.
>>> import Template.Mark5a.Machine
>>> :i Double
type Double :: *
data Double
  = ghc-prim-0.8.0:GHC.Types.D# ghc-prim-0.8.0:GHC.Prim.Double#
  	-- Defined in ‘ghc-prim-0.8.0:GHC.Types’
instance Eq Double -- Defined in ‘ghc-prim-0.8.0:GHC.Classes’
instance Ord Double -- Defined in ‘ghc-prim-0.8.0:GHC.Classes’
instance Enum Double -- Defined in ‘GHC.Float’
instance Floating Double -- Defined in ‘GHC.Float’
instance Fractional Double -- Defined in ‘GHC.Float’
instance Num Double -- Defined in ‘GHC.Float’
instance Real Double -- Defined in ‘GHC.Float’
instance RealFloat Double -- Defined in ‘GHC.Float’
instance RealFrac Double -- Defined in ‘GHC.Float’
instance Show Double -- Defined in ‘GHC.Float’
instance Read Double -- Defined in ‘GHC.Read’
>>> x = [1.797693e308 ..]
>>> x
[1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693e308,1.797693Interrupted.
>>> length it

<interactive>:5:8: error:
    • Variable not in scope: it :: t0 a0
    • Perhaps you meant ‘id’ (imported from Prelude)
>>> x = [1.797693e308 ..]
>>> length x
Interrupted.
>>> :q
Leaving GHCi.
Build profile: -w ghc-9.2.1 -O1
In order, the following will be built (use -v for more details):
 - ifl-tut-0.2.8.1 (lib) (file src/Template/Mark5a/PPrint.hs changed)
Preprocessing library for ifl-tut-0.2.8.1..
GHCi, version 9.2.1: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/nobsun/develop/ifl-tut/.ghci
[ 1 of 23] Compiling MyLib            ( src/MyLib.hs, interpreted )
[ 2 of 23] Compiling Parser           ( src/Parser.hs, interpreted )
[ 3 of 23] Compiling Stack            ( src/Stack.hs, interpreted )
[ 4 of 23] Compiling Utils            ( src/Utils.hs, interpreted )
[ 5 of 23] Compiling Iseq             ( src/Iseq.hs, interpreted )
[ 6 of 23] Compiling Language         ( src/Language.hs, interpreted )
[ 7 of 23] Compiling Template.Mark5.Primitive ( src/Template/Mark5/Primitive.hs, interpreted )
[ 8 of 23] Compiling Heap             ( src/Heap.hs, interpreted )
[ 9 of 23] Compiling Template.Mark5b.State ( src/Template/Mark5b/State.hs, interpreted )
[10 of 23] Compiling Template.Mark5b.PPrint ( src/Template/Mark5b/PPrint.hs, interpreted )
[11 of 23] Compiling Template.Mark5b.Machine ( src/Template/Mark5b/Machine.hs, interpreted )
[12 of 23] Compiling Template.Mark5a.State ( src/Template/Mark5a/State.hs, interpreted )
[13 of 23] Compiling Template.Mark5.Node ( src/Template/Mark5/Node.hs, interpreted )
[14 of 23] Compiling Template.Mark5.State ( src/Template/Mark5/State.hs, interpreted )
[15 of 23] Compiling Template.Mark5   ( src/Template/Mark5.hs, interpreted )
[16 of 23] Compiling Template.Mark4   ( src/Template/Mark4.hs, interpreted )
[17 of 23] Compiling Template.Mark3   ( src/Template/Mark3.hs, interpreted )
[18 of 23] Compiling Template.Mark2   ( src/Template/Mark2.hs, interpreted )
[19 of 23] Compiling Template.Mark1   ( src/Template/Mark1.hs, interpreted )
[20 of 23] Compiling Template.Mark5a.PPrint ( src/Template/Mark5a/PPrint.hs, interpreted )
[21 of 23] Compiling Template.Mark5a.Machine ( src/Template/Mark5a/Machine.hs, interpreted )
[22 of 23] Compiling Template.Mark5.PPrint ( src/Template/Mark5/PPrint.hs, interpreted )
[23 of 23] Compiling Template.Mark5.Machine ( src/Template/Mark5/Machine.hs, interpreted )
Ok, 23 modules loaded.
>>> x = [1.797693e307, 1.0e307 ..]
>>> x
[1.797693e307,1.0e307,2.0230699999999987e306,-5.953860000000001e306,-1.3930790000000004e307,-2.1907720000000006e307,-2.9884650000000006e307,-3.786158000000001e307,-4.583851000000001e307,-5.381544000000001e307,-6.179237000000002e307,-6.976930000000002e307,-7.774623000000001e307,-8.572316000000002e307,-9.370009e307,-1.0167702000000002e308,-1.0965395e308,-1.1763088e308,-1.2560781000000001e308,-1.3358474e308,-1.4156167000000002e308,-1.4953860000000001e308,-1.5751553000000002e308,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-Infinity,-InfInterrupted.
>>> succ (1/0)
Infinity
>>> length $ show $ succ (10^99)
100
>>> length $ show $ succ (10^49)
50
>>> length $ show $ (maxBound :: Word)
20
>>> succ (10^30)
1000000000000000000000000000001
>>> :q
Leaving GHCi.
Build profile: -w ghc-9.2.1 -O1
In order, the following will be built (use -v for more details):
 - ifl-tut-0.2.8.1 (lib) (ephemeral targets)
Preprocessing library for ifl-tut-0.2.8.1..
GHCi, version 9.2.1: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/nobsun/develop/ifl-tut/.ghci
[ 1 of 23] Compiling MyLib            ( src/MyLib.hs, interpreted )
[ 2 of 23] Compiling Parser           ( src/Parser.hs, interpreted )
[ 3 of 23] Compiling Stack            ( src/Stack.hs, interpreted )
[ 4 of 23] Compiling Utils            ( src/Utils.hs, interpreted )
[ 5 of 23] Compiling Iseq             ( src/Iseq.hs, interpreted )
[ 6 of 23] Compiling Language         ( src/Language.hs, interpreted )
[ 7 of 23] Compiling Template.Mark5.Primitive ( src/Template/Mark5/Primitive.hs, interpreted )
[ 8 of 23] Compiling Heap             ( src/Heap.hs, interpreted )
[ 9 of 23] Compiling Template.Mark5b.State ( src/Template/Mark5b/State.hs, interpreted )
[10 of 23] Compiling Template.Mark5b.PPrint ( src/Template/Mark5b/PPrint.hs, interpreted )
[11 of 23] Compiling Template.Mark5b.Machine ( src/Template/Mark5b/Machine.hs, interpreted )
[12 of 23] Compiling Template.Mark5a.State ( src/Template/Mark5a/State.hs, interpreted )
[13 of 23] Compiling Template.Mark5a.PPrint ( src/Template/Mark5a/PPrint.hs, interpreted )
[14 of 23] Compiling Template.Mark5a.Machine ( src/Template/Mark5a/Machine.hs, interpreted )
[15 of 23] Compiling Template.Mark5.Node ( src/Template/Mark5/Node.hs, interpreted )
[16 of 23] Compiling Template.Mark5.State ( src/Template/Mark5/State.hs, interpreted )
[17 of 23] Compiling Template.Mark5.PPrint ( src/Template/Mark5/PPrint.hs, interpreted )
[18 of 23] Compiling Template.Mark5.Machine ( src/Template/Mark5/Machine.hs, interpreted )
[19 of 23] Compiling Template.Mark5   ( src/Template/Mark5.hs, interpreted )
[20 of 23] Compiling Template.Mark4   ( src/Template/Mark4.hs, interpreted )
[21 of 23] Compiling Template.Mark3   ( src/Template/Mark3.hs, interpreted )
[22 of 23] Compiling Template.Mark2   ( src/Template/Mark2.hs, interpreted )
[23 of 23] Compiling Template.Mark1   ( src/Template/Mark1.hs, interpreted )
Ok, 23 modules loaded.
>>> import Template.Mark5b.State
>>> import Template.Mark5b.Machine
>>> :t testt

<interactive>:1:1: error:
    • Variable not in scope: testt
    • Perhaps you meant ‘test’ (imported from Template.Mark5b.Machine)
>>> :t test
test :: String -> IO ()
>>> test "main = Cons e Nil ; e = (1 + 2) * (3 + 5)"
   0) Heap [  41: NAp #22 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              19: NSupercomb Cons
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e
               1: NSupercomb main ]
      Stack [  41: NAp   22    1 (NSupercomb main) ]
      Depth 1
      Output []
      Rule (2,0)
      
   1) Heap [  41: NAp #22 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              19: NSupercomb Cons
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e
               1: NSupercomb main ]
      Stack [  22: NSupercomb printList
               41: NAp   22    1 (NSupercomb main) ]
      Depth 2
      Output []
      Rule (2,1)
      
   2) Heap [  41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              19: NSupercomb Cons
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e
               1: NSupercomb main ]
      Stack [  41: NAp   43   23 (NSupercomb printCons) ]
      Depth 1
      Output []
      Rule (2,3)
      
   3) Heap [  41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              19: NSupercomb Cons
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e
               1: NSupercomb main ]
      Stack [  43: NAp   42   39 (NPrim stop)
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 2
      Output []
      Rule (2,1)
      
   4) Heap [  41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              19: NSupercomb Cons
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e
               1: NSupercomb main ]
      Stack [  42: NAp   37    1 (NSupercomb main)
               43: NAp   42   39 (NPrim stop)
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 3
      Output []
      Rule (2,1)
      
   5) Heap [  41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              19: NSupercomb Cons
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e
               1: NSupercomb main ]
      Stack [  37: NPrim caseList
               42: NAp   37    1 (NSupercomb main)
               43: NAp   42   39 (NPrim stop)
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 4
      Output []
      Rule (2,1)
      
   6) Heap [  41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              19: NSupercomb Cons
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e
               1: NSupercomb main ]
      Stack [   1: NSupercomb main
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 2
      Output []
      Rule (2,1)
      
   7) Heap [   1: NAp #44 #18
              44: NAp #19 #2
              41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              19: NSupercomb Cons
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e ]
      Stack [   1: NAp   44   18 (NSupercomb Nil)
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 2
      Output []
      Rule (2,3)
      
   8) Heap [   1: NAp #44 #18
              44: NAp #19 #2
              41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              19: NSupercomb Cons
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e ]
      Stack [  44: NAp   19    2 (NSupercomb e)
                1: NAp   44   18 (NSupercomb Nil)
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 3
      Output []
      Rule (2,1)
      
   9) Heap [   1: NAp #44 #18
              44: NAp #19 #2
              41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              19: NSupercomb Cons
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e ]
      Stack [  19: NSupercomb Cons
               44: NAp   19    2 (NSupercomb e)
                1: NAp   44   18 (NSupercomb Nil)
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 4
      Output []
      Rule (2,1)
      
  10) Heap [  19: NPrim Constr
               1: NAp #44 #18
              44: NAp #19 #2
              41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e ]
      Stack [  19: NPrim Constr
               44: NAp   19    2 (NSupercomb e)
                1: NAp   44   18 (NSupercomb Nil)
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 4
      Output []
      Rule (2,3)
      
  11) Heap [   1: NData 1 #2 #18 #23
              19: NPrim Constr
              44: NAp #19 #2
              41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e ]
      Stack [   1: NData 1 #2 #18 #23
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 2
      Output []
      Rule (2,10)
      
  12) Heap [   1: NData 1 #2 #18 #23
              19: NPrim Constr
              44: NAp #19 #2
              41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e ]
      Stack [  41: NAp   43   23 (NSupercomb printCons) ]
      Depth 1
      Output []
      Rule (2,10)
      
  13) Heap [   1: NData 1 #2 #18 #23
              19: NPrim Constr
              44: NAp #19 #2
              41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e ]
      Stack [  43: NAp   42   39 (NPrim stop)
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 2
      Output []
      Rule (2,1)
      
  14) Heap [   1: NData 1 #2 #18 #23
              19: NPrim Constr
              44: NAp #19 #2
              41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e ]
      Stack [  42: NAp   37    1 (NData 1 #2 #18 #23)
               43: NAp   42   39 (NPrim stop)
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 3
      Output []
      Rule (2,1)
      
  15) Heap [   1: NData 1 #2 #18 #23
              19: NPrim Constr
              44: NAp #19 #2
              41: NAp #43 #23
              43: NAp #42 #39
              42: NAp #37 #1
              40: NPrim print
              39: NPrim stop
              38: NPrim abort
              37: NPrim caseList
              36: NPrim casePair
              35: NPrim if
              34: NPrim /=
              33: NPrim ==
              32: NPrim >=
              31: NPrim >
              30: NPrim <=
              29: NPrim <
              28: NPrim /
              27: NPrim *
              26: NPrim -
              25: NPrim +
              24: NPrim negate
              23: NSupercomb printCons
              22: NSupercomb printList
              21: NSupercomb tail
              20: NSupercomb head
              18: NSupercomb Nil
              17: NSupercomb snd
              16: NSupercomb fst
              15: NSupercomb MkPair
              14: NSupercomb xor
              13: NSupercomb or
              12: NSupercomb and
              11: NSupercomb not
              10: NSupercomb True
               9: NSupercomb False
               8: NSupercomb twice
               7: NSupercomb compose
               6: NSupercomb S
               5: NSupercomb K1
               4: NSupercomb K
               3: NSupercomb I
               2: NSupercomb e ]
      Stack [  37: NPrim caseList
               42: NAp   37    1 (NData 1 #2 #18 #23)
               43: NAp   42   39 (NPrim stop)
               41: NAp   43   23 (NSupercomb printCons) ]
      Depth 4
      Output []
      Rule (2,1)
      
*** Exception: src/Template/Mark5b/State.hs:(188,32)-(191,79): Non-exhaustive patterns in case

>>> :q
Leaving GHCi.
